/**
 * @author sole / http://soledadpenades.com
 * @author mrdoob / http://mrdoob.com
 * @author Robert Eisele / http://www.xarg.org
 * @author Philippe / http://philippe.elsass.me
 * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html
 * @author Paul Lewis / http://www.aerotwist.com/
 * @author lechecacharro
 * @author Josh Faul / http://jocafa.com/
 * @author egraether / http://egraether.com/
 * @author endel / http://endel.me
 * @author Ben Delarre / http://delarre.net
 * @author csiqueirasilva
 */

// Date.now shim for (ahem) Internet Explo(d|r)er
if (Date.now === undefined) {

    Date.now = function() {

        return new Date().valueOf();

    };

}

var TWEEN = TWEEN || (function() {

    var _tweens = [];
    var _worker = new Worker('lib/worker/tween.js');
    var _running = false;

    var workerTweens = [];

    _worker.onmessage = function(event) {
        var tween = workerTweens[event.data.id];
        if (event.data.cmd === 'fullUpdate') {
            TWEEN.update();
        } else if (event.data.cmd === 'onUpdate') {
            tween._object.x = event.data.updated[0];
            tween._object.y = event.data.updated[1];
            tween._object.z = event.data.updated[2];

            if (tween._onUpdateCallback !== null) {
                tween._onUpdateCallback.call(tween._object, event.data.elapsed);
            }

            if (event.data.elapsed == 1) {
                tween.elapsed = true;
            }

        } else if (event.data.cmd === 'onComplete') {
            if (tween._onCompleteCallback !== null) {

                tween._onCompleteCallback.call(tween._object);

            }

            for (var i = 0, numChainedTweens = tween._chainedTweens.length; i < numChainedTweens; i++) {
                tween._chainedTweens[ i ].start(event.data.time);
            }

            workerTweens[tween._id] = null;
        }
    };

    _worker.onerror = function(event) {
        throw new Error(event.message + " (" + event.filename + ":" + event.lineno + ")");
    };

    return {
        REVISION: '12.dbzccg',
        workerTweens: workerTweens,
        runChecks: function() {
            if (!_running) {
                TWEEN.getWorker().postMessage({
                    cmd: 'startCheck'
                });
                _running = true;
            }
        },
        getWorker: function() {
            return _worker;
        },
        getAll: function() {

            return _tweens;

        },
        removeAll: function() {

            _tweens = [];

        },
        add: function(tween) {

            workerTweens[tween._id] = tween;
            _tweens.push(tween);

        },
        remove: function(tween) {

            var i = _tweens.indexOf(tween);

            if (i !== -1) {

                _tweens.splice(i, 1);

            }

        },
        update: function(time) {

            if (_tweens.length === 0)
                return false;

            var i = 0;

            time = time !== undefined ? time : (typeof window !== 'undefined' && window.performance !== undefined && window.performance.now !== undefined ? window.performance.now() : Date.now());

            while (i < _tweens.length) {

                if (_tweens[ i ].elapsed === true) {
                    TWEEN.getWorker().postMessage({
                        cmd: 'finishupdate',
                        time: time,
                        id: _tweens[ i ]._id
                    });

                    _tweens.splice(i, 1);

                } else {
                    _tweens[ i ].update(time);
                    i++;
                }

            }

            return true;

        }
    };

})();

(function() {

    var idCounter = 1;

    TWEEN.Tween = function(object) {

        this._id = ++idCounter;
        this._object = object;
        this._valuesStart = {};
        this._valuesEnd = {};
        this._valuesStartRepeat = {};
        this._duration = 1000;
        this._repeat = 0;
        this._yoyo = false;
        this._isPlaying = false;
        this._reversed = false;
        this._delayTime = 0;
        this._startTime = null;
        this._easingFunction = TWEEN.Easing.LinearNone;
        this._interpolationFunction = TWEEN.Interpolation.Linear;
        this._chainedTweens = [];
        this._onStartCallback = null;
        this._onStartCallbackFired = false;
        this._onUpdateCallback = null;
        this._onCompleteCallback = null;

        // Set all starting values present on the target object
        for (var field in object) {

            this._valuesStart[ field ] = parseFloat(object[field], 10);

        }

        this.to = function(properties, duration) {

            if (duration !== undefined) {

                this._duration = duration;

            }

            this._valuesEnd = properties;

            return this;

        };

        this.start = function(time) {

            this.elapsed = false;

            TWEEN.add(this);

            this._isPlaying = true;

            this._onStartCallbackFired = false;

            this._startTime = time !== undefined ? time : (typeof window !== 'undefined' && window.performance !== undefined && window.performance.now !== undefined ? window.performance.now() : Date.now());
            this._startTime += this._delayTime;

            for (var property in this._valuesEnd) {

                // check if an Array was provided as property value
                if (this._valuesEnd[ property ] instanceof Array) {

                    if (this._valuesEnd[ property ].length === 0) {

                        continue;

                    }

                    // create a local copy of the Array with the start value at the front
                    this._valuesEnd[ property ] = [this._object[ property ]].concat(this._valuesEnd[ property ]);

                }

                this._valuesStart[ property ] = this._object[ property ];

                if ((this._valuesStart[ property ] instanceof Array) === false) {
                    this._valuesStart[ property ] *= 1.0; // Ensures we're using numbers, not strings
                }

                this._valuesStartRepeat[ property ] = this._valuesStart[ property ] || 0;

            }

            return this;

        };

        this.stop = function() {

            if (!this._isPlaying) {
                return this;
            }

            TWEEN.remove(this);
            this._isPlaying = false;
            this.stopChainedTweens();
            return this;

        };

        this.stopChainedTweens = function() {

            for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {

                this._chainedTweens[ i ].stop();

            }

        };

        this.delay = function(amount) {

            this._delayTime = amount;
            return this;

        };

        this.repeat = function(times) {

            this._repeat = times;
            return this;

        };

        this.yoyo = function(yoyo) {

            this._yoyo = yoyo;
            return this;

        };


        this.easing = function(easing) {

            this._easingFunction = easing;
            return this;

        };

        this.interpolation = function(interpolation) {

            this._interpolationFunction = interpolation;
            return this;

        };

        this.chain = function() {

            this._chainedTweens = arguments;
            return this;

        };

        this.onStart = function(callback) {

            this._onStartCallback = callback;
            return this;

        };

        this.onUpdate = function(callback) {

            this._onUpdateCallback = callback;
            return this;

        };

        this.onComplete = function(callback) {

            this._onCompleteCallback = callback;
            return this;

        };

        this.update = function(time) {

            if (time < this._startTime) {

                return true;

            }

            if (this._onStartCallbackFired === false) {

                if (this._onStartCallback !== null) {

                    this._onStartCallback.call(this._object);

                }

                this._onStartCallbackFired = true;

            }

            TWEEN.getWorker().postMessage({
                cmd: 'initupdate',
                easingFunction: ClassHelper.getKeyByValue(TWEEN.Easing, this._easingFunction),
//                interpolationFunction: this._interpolationFunction,
                valuesEnd: [this._valuesEnd.x, this._valuesEnd.y, this._valuesEnd.z],
                valuesStart: [this._valuesStart.x, this._valuesStart.y, this._valuesStart.z],
                time: time,
                startTime: this._startTime,
                duration: this._duration,
                id: this._id
            });


            // call worker to initiate the update on the tween


            // call the worker to update the callback


        };

    };

})();

TWEEN.Easing = {};
TWEEN.Easing.LinearNone = 1;
TWEEN.Easing.QuadraticIn = 2;
TWEEN.Easing.QuadraticOut = 3;
TWEEN.Easing.QuadraticInOut = 4;
TWEEN.Easing.CubicIn = 5;
TWEEN.Easing.CubicOut = 6;
TWEEN.Easing.CubicInOut = 7;
TWEEN.Easing.QuarticIn = 8;
TWEEN.Easing.QuarticOut = 9;
TWEEN.Easing.QuarticInOut = 10;
TWEEN.Easing.QuinticIn = 11;
TWEEN.Easing.QuinticOut = 12;
TWEEN.Easing.QuinticInOut = 13;
TWEEN.Easing.SinusoidalIn = 14;
TWEEN.Easing.SinusoidalOut = 15;
TWEEN.Easing.SinusoidalInOut = 16;
TWEEN.Easing.ExponentialIn = 17;
TWEEN.Easing.ExponentialOut = 18;
TWEEN.Easing.ExponentialInOut = 19;
TWEEN.Easing.CircularIn = 20;
TWEEN.Easing.CircularOut = 21;
TWEEN.Easing.CircularInOut = 22;
TWEEN.Easing.ElasticIn = 23;
TWEEN.Easing.ElasticOut = 24;
TWEEN.Easing.ElasticInOut = 25;
TWEEN.Easing.BackIn = 26;
TWEEN.Easing.BackOut = 27;
TWEEN.Easing.BackInOut = 28;
TWEEN.Easing.BounceIn = 29;
TWEEN.Easing.BounceOut = 30;
TWEEN.Easing.BounceInOut = 31;

TWEEN.Interpolation = {
    Linear: function(v, k) {

        var m = v.length - 1, f = m * k, i = Math.floor(f), fn = TWEEN.Interpolation.Utils.Linear;

        if (k < 0)
            return fn(v[ 0 ], v[ 1 ], f);
        if (k > 1)
            return fn(v[ m ], v[ m - 1 ], m - f);

        return fn(v[ i ], v[ i + 1 > m ? m : i + 1 ], f - i);

    },
    Bezier: function(v, k) {

        var b = 0, n = v.length - 1, pw = Math.pow, bn = TWEEN.Interpolation.Utils.Bernstein, i;

        for (i = 0; i <= n; i++) {
            b += pw(1 - k, n - i) * pw(k, i) * v[ i ] * bn(n, i);
        }

        return b;

    },
    CatmullRom: function(v, k) {

        var m = v.length - 1, f = m * k, i = Math.floor(f), fn = TWEEN.Interpolation.Utils.CatmullRom;

        if (v[ 0 ] === v[ m ]) {

            if (k < 0)
                i = Math.floor(f = m * (1 + k));

            return fn(v[ (i - 1 + m) % m ], v[ i ], v[ (i + 1) % m ], v[ (i + 2) % m ], f - i);

        } else {

            if (k < 0)
                return v[ 0 ] - (fn(v[ 0 ], v[ 0 ], v[ 1 ], v[ 1 ], -f) - v[ 0 ]);
            if (k > 1)
                return v[ m ] - (fn(v[ m ], v[ m ], v[ m - 1 ], v[ m - 1 ], f - m) - v[ m ]);

            return fn(v[ i ? i - 1 : 0 ], v[ i ], v[ m < i + 1 ? m : i + 1 ], v[ m < i + 2 ? m : i + 2 ], f - i);

        }

    },
    Utils: {
        Linear: function(p0, p1, t) {

            return (p1 - p0) * t + p0;

        },
        Bernstein: function(n, i) {

            var fc = TWEEN.Interpolation.Utils.Factorial;
            return fc(n) / fc(i) / fc(n - i);

        },
        Factorial: (function() {

            var a = [1];

            return function(n) {

                var s = 1, i;
                if (a[ n ])
                    return a[ n ];
                for (i = n; i > 1; i--)
                    s *= i;
                return a[ n ] = s;

            };

        })(),
        CatmullRom: function(p0, p1, p2, p3, t) {

            var v0 = (p2 - p0) * 0.5, v1 = (p3 - p1) * 0.5, t2 = t * t, t3 = t * t2;
            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;

        }

    }

};